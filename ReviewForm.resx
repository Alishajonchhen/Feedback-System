<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        der/AeanLNrCcDh1AAAAAElFTkSuQmCC
</value>
  </data>
</root>